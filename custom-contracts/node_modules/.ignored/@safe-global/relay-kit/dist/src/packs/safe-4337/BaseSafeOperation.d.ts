import { EstimateGasData, SafeOperation, SafeOperationOptions, SafeSignature, SafeUserOperation, UserOperation } from '@safe-global/types-kit';
import { EIP712_SAFE_OPERATION_TYPE_V06, EIP712_SAFE_OPERATION_TYPE_V07 } from '../../packs/safe-4337/constants';
declare abstract class BaseSafeOperation implements SafeOperation {
    userOperation: UserOperation;
    options: SafeOperationOptions;
    signatures: Map<string, SafeSignature>;
    constructor(userOperation: UserOperation, options: SafeOperationOptions);
    abstract addEstimations(estimations: EstimateGasData): void;
    abstract getSafeOperation(): SafeUserOperation;
    getSignature(signer: string): SafeSignature | undefined;
    addSignature(signature: SafeSignature): void;
    encodedSignatures(): string;
    getUserOperation(): UserOperation;
    getHash(): string;
    abstract getEIP712Type(): typeof EIP712_SAFE_OPERATION_TYPE_V06 | typeof EIP712_SAFE_OPERATION_TYPE_V07;
}
export default BaseSafeOperation;
//# sourceMappingURL=BaseSafeOperation.d.ts.map