/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BytesLike,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  BaseTreasury,
  BaseTreasuryInterface,
} from "../../../../circles-groups/src/base-group/BaseTreasury";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_hub",
        type: "address",
      },
      {
        internalType: "address",
        name: "_nameRegistry",
        type: "address",
      },
      {
        internalType: "address",
        name: "_group",
        type: "address",
      },
      {
        internalType: "string",
        name: "_groupName",
        type: "string",
      },
      {
        internalType: "bytes32",
        name: "_metadataDigest",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "CollateralIsNotTrustedByGroup",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyGroup",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyHub",
    type: "error",
  },
  {
    inputs: [],
    name: "GROUP",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "HUB",
    outputs: [
      {
        internalType: "contract IHub",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "NAME_REGISTRY",
    outputs: [
      {
        internalType: "contract INameRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "_ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_metadataDigest",
        type: "bytes32",
      },
    ],
    name: "updateMetadataDigest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e060405234801561000f575f5ffd5b50604051610c32380380610c3283398101604081905261002e91610169565b6001600160a01b0380861660805284811660a052831660c0526040515f9061005a908490602001610256565b60408051601f198184030181529082905260805163bfde380d60e01b83529092506001600160a01b03169063bfde380d9061009b908490869060040161027b565b5f604051808303815f87803b1580156100b2575f5ffd5b505af11580156100c4573d5f5f3e3d5ffd5b50506080516040516375dcebc760e01b81526001600160a01b0388811660048301526001600160601b03602483015290911692506375dcebc791506044015f604051808303815f87803b158015610119575f5ffd5b505af115801561012b573d5f5f3e3d5ffd5b505050505050505050506102b7565b80516001600160a01b0381168114610150575f5ffd5b919050565b634e487b7160e01b5f52604160045260245ffd5b5f5f5f5f5f60a0868803121561017d575f5ffd5b6101868661013a565b94506101946020870161013a565b93506101a26040870161013a565b60608701519093506001600160401b038111156101bd575f5ffd5b8601601f810188136101cd575f5ffd5b80516001600160401b038111156101e6576101e6610155565b604051601f8201601f19908116603f011681016001600160401b038111828210171561021457610214610155565b6040528181528282016020018a101561022b575f5ffd5b8160208401602083015e5f918101602001919091526080979097015195989497509295949392505050565b5f82518060208501845e682d747265617375727960b81b920191825250600901919050565b604081525f83518060408401528060208601606085015e5f606082850101526060601f19601f8301168401019150508260208301529392505050565b60805160a05160c05161091361031f5f395f8181610165015281816101db015281816102ad015261052f01525f818160d3015261022f01525f8181610112015281816102da01528181610374015281816103e401528181610451015261050001526109135ff3fe608060405234801561000f575f5ffd5b5060043610610085575f3560e01c8063a4c52b8611610058578063a4c52b861461010d578063bc197c8114610134578063e532b61d14610160578063f23a6e6114610187575f5ffd5b806301ffc9a7146100895780633857d9d7146100b157806344df8e70146100c6578063a05c2616146100ce575b5f5ffd5b61009c6100973660046105ff565b61019a565b60405190151581526020015b60405180910390f35b6100c46100bf36600461062d565b6101d0565b005b6100c4610291565b6100f57f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100a8565b6100f57f000000000000000000000000000000000000000000000000000000000000000081565b610147610142366004610790565b6103d8565b6040516001600160e01b031990911681526020016100a8565b6100f57f000000000000000000000000000000000000000000000000000000000000000081565b61014761019536600461083f565b610445565b5f6001600160e01b03198216630271189760e51b14806101ca57506301ffc9a760e01b6001600160e01b03198316145b92915050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461021957604051636346b2b760e01b815260040160405180910390fd5b604051633857d9d760e01b8152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690633857d9d7906024015f604051808303815f87803b158015610278575f5ffd5b505af115801561028a573d5f5f3e3d5ffd5b5050505050565b604051627eeac760e11b81523060048201526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660248301819052915f917f0000000000000000000000000000000000000000000000000000000000000000169062fdd58e90604401602060405180830381865afa15801561031e573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103429190610893565b905080156103d4576040516380a5a37160e01b81526004810183905260248101829052606060448201525f60648201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906380a5a371906084015f604051808303815f87803b1580156103bd575f5ffd5b505af11580156103cf573d5f5f3e3d5ffd5b505050505b5050565b5f336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104225760405163058a7c7360e31b815260040160405180910390fd5b61042b846104f3565b610433610291565b5063bc197c8160e01b95945050505050565b5f336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461048f5760405163058a7c7360e31b815260040160405180910390fd5b6040805160018082528183019092525f916020808301908036833701905050905084815f815181106104c3576104c36108aa565b6020026020010181815250506104d8816104f3565b6104e0610291565b5063f23a6e6160e01b9695505050505050565b5f5b81518110156103d4577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636713e2307f0000000000000000000000000000000000000000000000000000000000000000848481518110610560576105606108aa565b60200260200101516040518363ffffffff1660e01b815260040161059a9291906001600160a01b0392831681529116602082015260400190565b6020604051808303815f875af11580156105b6573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105da91906108be565b6105f757604051631c74bb5760e11b815260040160405180910390fd5b6001016104f5565b5f6020828403121561060f575f5ffd5b81356001600160e01b031981168114610626575f5ffd5b9392505050565b5f6020828403121561063d575f5ffd5b5035919050565b80356001600160a01b038116811461065a575f5ffd5b919050565b634e487b7160e01b5f52604160045260245ffd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561069c5761069c61065f565b604052919050565b5f82601f8301126106b3575f5ffd5b813567ffffffffffffffff8111156106cd576106cd61065f565b8060051b6106dd60208201610673565b918252602081850181019290810190868411156106f8575f5ffd5b6020860192505b8383101561071a5782358252602092830192909101906106ff565b9695505050505050565b5f82601f830112610733575f5ffd5b813567ffffffffffffffff81111561074d5761074d61065f565b610760601f8201601f1916602001610673565b818152846020838601011115610774575f5ffd5b816020850160208301375f918101602001919091529392505050565b5f5f5f5f5f60a086880312156107a4575f5ffd5b6107ad86610644565b94506107bb60208701610644565b9350604086013567ffffffffffffffff8111156107d6575f5ffd5b6107e2888289016106a4565b935050606086013567ffffffffffffffff8111156107fe575f5ffd5b61080a888289016106a4565b925050608086013567ffffffffffffffff811115610826575f5ffd5b61083288828901610724565b9150509295509295909350565b5f5f5f5f5f60a08688031215610853575f5ffd5b61085c86610644565b945061086a60208701610644565b93506040860135925060608601359150608086013567ffffffffffffffff811115610826575f5ffd5b5f602082840312156108a3575f5ffd5b5051919050565b634e487b7160e01b5f52603260045260245ffd5b5f602082840312156108ce575f5ffd5b81518015158114610626575f5ffdfea26469706673582212209217904d1030e636468aab237302c0a7da124f4e37962b7534b7440189dde9ae64736f6c634300081c0033";

type BaseTreasuryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BaseTreasuryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BaseTreasury__factory extends ContractFactory {
  constructor(...args: BaseTreasuryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _hub: AddressLike,
    _nameRegistry: AddressLike,
    _group: AddressLike,
    _groupName: string,
    _metadataDigest: BytesLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _hub,
      _nameRegistry,
      _group,
      _groupName,
      _metadataDigest,
      overrides || {}
    );
  }
  override deploy(
    _hub: AddressLike,
    _nameRegistry: AddressLike,
    _group: AddressLike,
    _groupName: string,
    _metadataDigest: BytesLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _hub,
      _nameRegistry,
      _group,
      _groupName,
      _metadataDigest,
      overrides || {}
    ) as Promise<
      BaseTreasury & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): BaseTreasury__factory {
    return super.connect(runner) as BaseTreasury__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BaseTreasuryInterface {
    return new Interface(_abi) as BaseTreasuryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): BaseTreasury {
    return new Contract(address, _abi, runner) as unknown as BaseTreasury;
  }
}
