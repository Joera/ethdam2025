/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  ILiftERC20,
  ILiftERC20Interface,
} from "../../../../../circles-groups/src/base-group/interfaces/ILiftERC20";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_avatar",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "_circlesType",
        type: "uint8",
      },
    ],
    name: "ensureERC20",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class ILiftERC20__factory {
  static readonly abi = _abi;
  static createInterface(): ILiftERC20Interface {
    return new Interface(_abi) as ILiftERC20Interface;
  }
  static connect(address: string, runner?: ContractRunner | null): ILiftERC20 {
    return new Contract(address, _abi, runner) as unknown as ILiftERC20;
  }
}
