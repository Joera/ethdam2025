/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BytesLike,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  BaseMintHandler,
  BaseMintHandlerInterface,
} from "../../../../circles-groups/src/base-group/BaseMintHandler";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_hub",
        type: "address",
      },
      {
        internalType: "address",
        name: "_nameRegistry",
        type: "address",
      },
      {
        internalType: "address",
        name: "_group",
        type: "address",
      },
      {
        internalType: "address",
        name: "_demurrage",
        type: "address",
      },
      {
        internalType: "address",
        name: "_inflationary",
        type: "address",
      },
      {
        internalType: "string",
        name: "_groupName",
        type: "string",
      },
      {
        internalType: "bytes32",
        name: "_metadataDigest",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ConversionOngoing",
    type: "error",
  },
  {
    inputs: [],
    name: "LogicAssertion",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyGroup",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyHub",
    type: "error",
  },
  {
    inputs: [],
    name: "ReceivedZeroAmount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [],
    name: "ConversionCleared",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenType",
        type: "uint256",
      },
    ],
    name: "ConversionInitiated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenType",
        type: "uint256",
      },
    ],
    name: "ReturnedMintedGroupCircles",
    type: "event",
  },
  {
    inputs: [],
    name: "DEMURRAGE",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "GROUP",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "GROUP_ID",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "HUB",
    outputs: [
      {
        internalType: "contract IHub",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INFLATIONARY",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "NAME_REGISTRY",
    outputs: [
      {
        internalType: "contract INameRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TYPE_DEMURRAGE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TYPE_INFLATIONARY",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_trustReceiver",
        type: "address",
      },
      {
        internalType: "uint96",
        name: "_expiry",
        type: "uint96",
      },
    ],
    name: "mirrorTrust",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "_ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_values",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_metadataDigest",
        type: "bytes32",
      },
    ],
    name: "updateMetadataDigest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x610140604052348015610010575f5ffd5b5060405161165938038061165983398101604081905261002f91610118565b6001600160a01b0380881660805286811660a05285811660c081905260e052848116610100528316610120526040515f9061006e908490602001610228565b60408051601f198184030181529082905260805163bfde380d60e01b83529092506001600160a01b03169063bfde380d906100af9084908690600401610251565b5f604051808303815f87803b1580156100c6575f5ffd5b505af11580156100d8573d5f5f3e3d5ffd5b50505050505050505050505061028d565b80516001600160a01b03811681146100ff575f5ffd5b919050565b634e487b7160e01b5f52604160045260245ffd5b5f5f5f5f5f5f5f60e0888a03121561012e575f5ffd5b610137886100e9565b9650610145602089016100e9565b9550610153604089016100e9565b9450610161606089016100e9565b935061016f608089016100e9565b60a08901519093506001600160401b0381111561018a575f5ffd5b8801601f81018a1361019a575f5ffd5b80516001600160401b038111156101b3576101b3610104565b604051601f8201601f19908116603f011681016001600160401b03811182821017156101e1576101e1610104565b6040528181528282016020018c10156101f8575f5ffd5b8160208401602083015e5f602083830101528094505050505f60c089015190508091505092959891949750929550565b5f82518060208501845e6c16b6b4b73a16b430b7323632b960991b920191825250600d01919050565b604081525f83518060408401528060208601606085015e5f606082850101526060601f19601f8301168401019150508260208301529392505050565b60805160a05160c05160e051610100516101205161130e61034b5f395f8181610287015261082f01525f818161016d015261085501525f81816101460152818161074801526107c601525f8181610260015281816102fd0152818161055c015281816105d8015281816109130152610be701525f81816101ac015261035101525f81816101d3015281816103bf0152818161052f01528181610649015281816106b001528181610795015281816108ec0152610bba015261130e5ff3fe608060405234801561000f575f5ffd5b50600436106100cb575f3560e01c8063a4c52b8611610088578063c878fe9511610063578063c878fe9514610248578063e532b61d1461025b578063f07108a014610282578063f23a6e61146102a9575f5ffd5b8063a4c52b86146101ce578063a855a717146101f5578063bc197c811461021c575f5ffd5b806301ffc9a7146100cf578063033f7354146100f75780633857d9d71461012c5780634dd9c0b5146101415780636604495e14610168578063a05c2616146101a7575b5f5ffd5b6100e26100dd366004610e04565b6102bc565b60405190151581526020015b60405180910390f35b61011e7ff3f5858942140fd2894eeb8b74cd0ed72d24fc6675d352a2884b1be2f32256fe81565b6040519081526020016100ee565b61013f61013a366004610e32565b6102f2565b005b61011e7f000000000000000000000000000000000000000000000000000000000000000081565b61018f7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100ee565b61018f7f000000000000000000000000000000000000000000000000000000000000000081565b61018f7f000000000000000000000000000000000000000000000000000000000000000081565b61011e7f9d28938b56c0e8aae8dd05e12461cbabf8f699236c3fd7c54c7d3bb9fb443ed281565b61022f61022a366004610f91565b6103b3565b6040516001600160e01b031990911681526020016100ee565b61013f610256366004611044565b6105cd565b61018f7f000000000000000000000000000000000000000000000000000000000000000081565b61018f7f000000000000000000000000000000000000000000000000000000000000000081565b61022f6102b736600461108b565b6106a4565b5f6001600160e01b03198216630271189760e51b14806102ec57506301ffc9a760e01b6001600160e01b03198316145b92915050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461033b57604051636346b2b760e01b815260040160405180910390fd5b604051633857d9d760e01b8152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690633857d9d7906024015f604051808303815f87803b15801561039a575f5ffd5b505af11580156103ac573d5f5f3e3d5ffd5b5050505050565b5f336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146103fd5760405163058a7c7360e31b815260040160405180910390fd5b6001600160a01b0385166104245760405163cac5bffb60e01b815260040160405180910390fd5b82518451146104465760405163cac5bffb60e01b815260040160405180910390fd5b5f5f855167ffffffffffffffff81111561046257610462610e60565b60405190808252806020026020018201604052801561048b578160200160208202803683370190505b5090505f5b865181101561050c578581815181106104ab576104ab6110e3565b6020026020010151836104be919061110b565b92508681815181106104d2576104d26110e3565b60200260200101518282815181106104ec576104ec6110e3565b6001600160a01b0390921660209283029190910190910152600101610490565b50610518878386610c56565b604051636cb498e560e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690636cb498e59061058a907f00000000000000000000000000000000000000000000000000000000000000009085908a908a9060040161114c565b5f604051808303815f87803b1580156105a1575f5ffd5b505af11580156105b3573d5f5f3e3d5ffd5b5063bc197c8160e01b955050505050505b95945050505050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461061657604051636346b2b760e01b815260040160405180910390fd5b6040516375dcebc760e01b81526001600160a01b0383811660048301526bffffffffffffffffffffffff831660248301527f000000000000000000000000000000000000000000000000000000000000000016906375dcebc7906044015f604051808303815f87803b15801561068a575f5ffd5b505af115801561069c573d5f5f3e3d5ffd5b505050505050565b5f336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146106ee5760405163058a7c7360e31b815260040160405180910390fd5b6001600160a01b038516610b04575f5160206112b95f395f51905f525c7f6136adcd727e05279d0beb0b97407672abc1607384d66aec4a65a09daa5bba685c5f5160206112995f395f51905f525c858314801561076a57507f000000000000000000000000000000000000000000000000000000000000000087145b15610aeb57610777610d97565b805f0361082457604051637921219560e11b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063f242432a906107f290309086907f00000000000000000000000000000000000000000000000000000000000000009089908c906004016111fb565b5f604051808303815f87803b158015610809575f5ffd5b505af115801561081b573d5f5f3e3d5ffd5b50505050610aa0565b5f81600114610853577f0000000000000000000000000000000000000000000000000000000000000000610875565b7f00000000000000000000000000000000000000000000000000000000000000005b6040516370a0823160e01b81523060048201529091505f906001600160a01b038316906370a0823190602401602060405180830381865afa1580156108bc573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108e09190611234565b90506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663aabd69547f00000000000000000000000000000000000000000000000000000000000000008761093e60018861124b565b6040516001600160e01b031960e086901b1681526001600160a01b039093166004840152602483019190915260ff1660448201526064016020604051808303815f875af1158015610991573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109b5919061125e565b506040516370a0823160e01b815230600482015281906001600160a01b038416906370a0823190602401602060405180830381865afa1580156109fa573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a1e9190611234565b610a28919061124b565b60405163a9059cbb60e01b81526001600160a01b038681166004830152602482018390529196509083169063a9059cbb906044016020604051808303815f875af1158015610a78573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a9c9190611279565b5050505b8083836001600160a01b03167f4442af9fc0f6466cea71a55e8cae87ef09853f682dc82b362e4c8981944afa3960405160405180910390a45063f23a6e6160e01b92506105c4915050565b60405163cac5bffb60e01b815260040160405180910390fd5b610b0f858484610c56565b6040805160018082528183019092525f916020808301908036833750506040805160018082528183019092529293505f9291506020808301908036833701905050905085825f81518110610b6557610b656110e3565b60200260200101906001600160a01b031690816001600160a01b03168152505084815f81518110610b9857610b986110e3565b6020908102919091010152604051636cb498e560e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690636cb498e590610c15907f000000000000000000000000000000000000000000000000000000000000000090869086908a9060040161114c565b5f604051808303815f87803b158015610c2c575f5ffd5b505af1158015610c3e573d5f5f3e3d5ffd5b5063f23a6e6160e01b9b9a5050505050505050505050565b633402a16360e01b63a896a06560e01b5f84610c7457825f5260045ffd5b5f5160206112b95f395f51905f525c8015610c9157825f5260045ffd5b855f5160206112b95f395f51905f525d867f6136adcd727e05279d0beb0b97407672abc1607384d66aec4a65a09daa5bba685d601f85511115610d565760208501517ff3f5858942140fd2894eeb8b74cd0ed72d24fc6675d352a2884b1be2f32256fe8114610d26577f9d28938b56c0e8aae8dd05e12461cbabf8f699236c3fd7c54c7d3bb9fb443ed28114610d3f57610d54565b60019250825f5160206112995f395f51905f525d610d54565b60029250825f5160206112995f395f51905f525d5b505b508085876001600160a01b03167fa4466aa34ad627877204336e07a065a4da68fb136d84533a7b17290b86154de960405160405180910390a4505050505050565b5f5f5160206112b95f395f51905f525d5f7f6136adcd727e05279d0beb0b97407672abc1607384d66aec4a65a09daa5bba685d5f5f5160206112995f395f51905f525d6040517f1992ef760e9f09c8c806016548a62b7fd11268379c371a730a1a06d621f002dc905f90a1565b5f60208284031215610e14575f5ffd5b81356001600160e01b031981168114610e2b575f5ffd5b9392505050565b5f60208284031215610e42575f5ffd5b5035919050565b6001600160a01b0381168114610e5d575f5ffd5b50565b634e487b7160e01b5f52604160045260245ffd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610e9d57610e9d610e60565b604052919050565b5f82601f830112610eb4575f5ffd5b813567ffffffffffffffff811115610ece57610ece610e60565b8060051b610ede60208201610e74565b91825260208185018101929081019086841115610ef9575f5ffd5b6020860192505b83831015610f1b578235825260209283019290910190610f00565b9695505050505050565b5f82601f830112610f34575f5ffd5b813567ffffffffffffffff811115610f4e57610f4e610e60565b610f61601f8201601f1916602001610e74565b818152846020838601011115610f75575f5ffd5b816020850160208301375f918101602001919091529392505050565b5f5f5f5f5f60a08688031215610fa5575f5ffd5b8535610fb081610e49565b94506020860135610fc081610e49565b9350604086013567ffffffffffffffff811115610fdb575f5ffd5b610fe788828901610ea5565b935050606086013567ffffffffffffffff811115611003575f5ffd5b61100f88828901610ea5565b925050608086013567ffffffffffffffff81111561102b575f5ffd5b61103788828901610f25565b9150509295509295909350565b5f5f60408385031215611055575f5ffd5b823561106081610e49565b915060208301356bffffffffffffffffffffffff81168114611080575f5ffd5b809150509250929050565b5f5f5f5f5f60a0868803121561109f575f5ffd5b85356110aa81610e49565b945060208601356110ba81610e49565b93506040860135925060608601359150608086013567ffffffffffffffff81111561102b575f5ffd5b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52601160045260245ffd5b808201808211156102ec576102ec6110f7565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b6001600160a01b03851681526080602080830182905285519183018290525f919086019060a0840190835b8181101561119e5783516001600160a01b0316835260209384019390920191600101611177565b50508381036040850152855180825260209182019250908601905f90815b818110156111da5783518552602094850194909301926001016111bc565b5050505082810360608401526111f0818561111e565b979650505050505050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a0608082018190525f906111f09083018461111e565b5f60208284031215611244575f5ffd5b5051919050565b818103818111156102ec576102ec6110f7565b5f6020828403121561126e575f5ffd5b8151610e2b81610e49565b5f60208284031215611289575f5ffd5b81518015158114610e2b575f5ffdfecda71533cdfa11dcfe861dbfa38b956c85d855f8e75c6728c650ac844f4fd47efb747a744f99e39f75c6fc4a40ae1e72605f4d4a2aa65e5e3d29e889d7f5061ba2646970667358221220a61ab608ba6f19bd473571ccb14791442c815ff5be1afbd226122ed916a2a2ac64736f6c634300081c0033";

type BaseMintHandlerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BaseMintHandlerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BaseMintHandler__factory extends ContractFactory {
  constructor(...args: BaseMintHandlerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _hub: AddressLike,
    _nameRegistry: AddressLike,
    _group: AddressLike,
    _demurrage: AddressLike,
    _inflationary: AddressLike,
    _groupName: string,
    _metadataDigest: BytesLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _hub,
      _nameRegistry,
      _group,
      _demurrage,
      _inflationary,
      _groupName,
      _metadataDigest,
      overrides || {}
    );
  }
  override deploy(
    _hub: AddressLike,
    _nameRegistry: AddressLike,
    _group: AddressLike,
    _demurrage: AddressLike,
    _inflationary: AddressLike,
    _groupName: string,
    _metadataDigest: BytesLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _hub,
      _nameRegistry,
      _group,
      _demurrage,
      _inflationary,
      _groupName,
      _metadataDigest,
      overrides || {}
    ) as Promise<
      BaseMintHandler & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): BaseMintHandler__factory {
    return super.connect(runner) as BaseMintHandler__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BaseMintHandlerInterface {
    return new Interface(_abi) as BaseMintHandlerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): BaseMintHandler {
    return new Contract(address, _abi, runner) as unknown as BaseMintHandler;
  }
}
