/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  BaseMintPolicy,
  BaseMintPolicyInterface,
} from "../../../sol/base-group/BaseMintPolicy";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "beforeBurnPolicy",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "beforeMintPolicy",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608080604052346015576101d9908161001a8239f35b5f80fdfe6080806040526004361015610012575f80fd5b5f3560e01c908163862038be146100ca575063b703825914610032575f80fd5b346100c65760a03660031901126100c65761004b610118565b5061005461012e565b5060443567ffffffffffffffff81116100c657610075903690600401610172565b505060643567ffffffffffffffff81116100c657610097903690600401610172565b505060843567ffffffffffffffff81116100c6576100b9903690600401610144565b5050602060405160018152f35b5f80fd5b346100c65760803660031901126100c6576100e3610118565b506100ec61012e565b506064359067ffffffffffffffff82116100c6576101106020923690600401610144565b505060018152f35b600435906001600160a01b03821682036100c657565b602435906001600160a01b03821682036100c657565b9181601f840112156100c65782359167ffffffffffffffff83116100c657602083818601950101116100c657565b9181601f840112156100c65782359167ffffffffffffffff83116100c6576020808501948460051b0101116100c65756fea2646970667358221220f6c9534af54b14d8afa60c244b9bc8370ebd30bf049f1a4f987e153def1746ab64736f6c634300081c0033";

type BaseMintPolicyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BaseMintPolicyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BaseMintPolicy__factory extends ContractFactory {
  constructor(...args: BaseMintPolicyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      BaseMintPolicy & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): BaseMintPolicy__factory {
    return super.connect(runner) as BaseMintPolicy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BaseMintPolicyInterface {
    return new Interface(_abi) as BaseMintPolicyInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): BaseMintPolicy {
    return new Contract(address, _abi, runner) as unknown as BaseMintPolicy;
  }
}
