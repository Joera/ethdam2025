/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  IsHumanAtLeastFourTrustsCondition,
  IsHumanAtLeastFourTrustsConditionInterface,
  CirclesCoreAddresses,
} from "../../../../sol/implementations/TrustedByFour.sol/IsHumanAtLeastFourTrustsCondition";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract IHub",
            name: "hub",
            type: "address",
          },
          {
            internalType: "contract IStandardTreasury",
            name: "standardTreasury",
            type: "address",
          },
          {
            internalType: "contract INameRegistryExtended",
            name: "nameRegistry",
            type: "address",
          },
          {
            internalType: "contract IERC20Lift",
            name: "erc20Lift",
            type: "address",
          },
        ],
        internalType: "struct CirclesCoreAddresses.CirclesCore",
        name: "_circlesCore",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "circlesCore",
    outputs: [
      {
        internalType: "contract IHub",
        name: "hub",
        type: "address",
      },
      {
        internalType: "contract IStandardTreasury",
        name: "standardTreasury",
        type: "address",
      },
      {
        internalType: "contract INameRegistryExtended",
        name: "nameRegistry",
        type: "address",
      },
      {
        internalType: "contract IERC20Lift",
        name: "erc20Lift",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_avatar",
        type: "address",
      },
    ],
    name: "passesMembershipCondition",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523461011a57604051601f61041e38819003918201601f19168301916001600160401b0383118484101761011e5780849260809460405283398101031261011a5760405190608082016001600160401b0381118382101761011e5760405280516001600160a01b0381169081810361011a57835260208201516001600160a01b038116919082810361011a57602085015260408301516001600160a01b0381169384820361011a576040860191909152606001516001600160a01b0381169485820361011a576060015260018060a01b03195f5416175f5560018060a01b0319600154161760015560018060a01b0319600254161760025560018060a01b031960035416176003556040516102eb90816101338239f35b5f80fd5b634e487b7160e01b5f52604160045260245ffdfe60806040526004361015610011575f80fd5b5f3560e01c8063cf3838e11461007e5763fafb27d71461002f575f80fd5b3461007a575f36600319011261007a575f54600154600254600354604080516001600160a01b0395861681529385166020850152918416918301919091529091166060820152608090f35b5f80fd5b3461007a57602036600319011261007a576004356001600160a01b038116810361007a576100ad6020916100ed565b6040519015158152f35b90601f8019910116810190811067ffffffffffffffff8211176100d957604052565b634e487b7160e01b5f52604160045260245ffd5b60405163c45ea8cd60e01b81525f81600481335afa9081156101f0575f9161020a575b506004815110610203575f905f5b81518110156101fb575f80546020600584901b85018101516040516306713e2360e41b81526001600160a01b039182166004820152888216602482015293919284926044928492165af19081156101f0575f916101b6575b50610184575b60010161011e565b915f1981146101a257600101916004831061017c5750505050600190565b634e487b7160e01b5f52601160045260245ffd5b90506020813d82116101e8575b816101d0602093836100b7565b8101031261007a5751801515810361007a575f610176565b3d91506101c3565b6040513d5f823e3d90fd5b505050505f90565b5050600190565b90503d805f833e61021b81836100b7565b81019060208183031261007a5780519067ffffffffffffffff821161007a570181601f8201121561007a5780519167ffffffffffffffff83116100d9578260051b916040519361026e60208501866100b7565b845260208085019382010191821161007a57602001915b818310610295575050505f610110565b82516001600160a01b038116810361007a5781526020928301920161028556fea264697066735822122097a17163cf7a39c036535a3ad3f612058d7ebff1cd8b5f16386a4c8ce86ad05064736f6c634300081c0033";

type IsHumanAtLeastFourTrustsConditionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: IsHumanAtLeastFourTrustsConditionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class IsHumanAtLeastFourTrustsCondition__factory extends ContractFactory {
  constructor(...args: IsHumanAtLeastFourTrustsConditionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _circlesCore: CirclesCoreAddresses.CirclesCoreStruct,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_circlesCore, overrides || {});
  }
  override deploy(
    _circlesCore: CirclesCoreAddresses.CirclesCoreStruct,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_circlesCore, overrides || {}) as Promise<
      IsHumanAtLeastFourTrustsCondition & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): IsHumanAtLeastFourTrustsCondition__factory {
    return super.connect(runner) as IsHumanAtLeastFourTrustsCondition__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): IsHumanAtLeastFourTrustsConditionInterface {
    return new Interface(_abi) as IsHumanAtLeastFourTrustsConditionInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IsHumanAtLeastFourTrustsCondition {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as IsHumanAtLeastFourTrustsCondition;
  }
}
